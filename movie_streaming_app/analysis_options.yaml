analyzer:
  exclude:
    - build/**

  errors:
    # find more error types on:
    # https://dart.dev/tools/diagnostic-messages\

    # treat missing required parameters as a warning
    missing_required_param: error

    # treat missing returns as a warning
    missing_return: error

    # treat TODOs comments as a warning
    todo: warning

    # treat unreachable code as a warning
    dead_code: warning

    # Turned off until null-safe rollout is complete.
    # Otherwise, the analyzer will report false errors.
    #-----------------------------------------------#
    #unnecessary_null_comparison: ignore
    #dead_null_aware_expression: ignore
    #invalid_null_aware_operator: ignore
    #-----------------------------------------------#

linter:
  rules:
    # these rules are documented on:
    # https://dart-lang.github.io/linter/lints/

    - always_declare_return_types
    - always_require_non_null_named_parameters
    - annotate_overrides
    - avoid_empty_else
    - avoid_init_to_null
    - avoid_null_checks_in_equality_operators
    - avoid_print
    - avoid_renaming_method_parameters
    - avoid_return_types_on_setters
    - avoid_returning_null_for_void
    - avoid_shadowing_type_parameters
    - avoid_types_as_parameter_names
    - avoid_unnecessary_containers
    - avoid_unused_constructor_parameters
    - await_only_futures
    - camel_case_extensions
    - camel_case_types
    - cancel_subscriptions
    - close_sinks
    - empty_catches
    - empty_constructor_bodies
    - empty_statements
    - exhaustive_cases
    - hash_and_equals
    - implementation_imports
    - iterable_contains_unrelated_type
    - list_remove_unrelated_type
    - no_adjacent_strings_in_list
    - no_duplicate_case_values
    - null_closures
    - prefer_const_constructors
    - prefer_const_constructors_in_immutables
    - prefer_const_declarations
    - prefer_contains
    - prefer_equal_for_default_values
    - prefer_final_fields
    - prefer_final_in_for_each
    - prefer_final_locals
    - prefer_function_declarations_over_variables
    - prefer_generic_function_type_aliases
    - prefer_if_elements_to_conditional_expressions
    - prefer_if_null_operators
    - prefer_initializing_formals
    - prefer_inlined_adds
    - prefer_is_empty
    - prefer_is_not_empty
    - prefer_iterable_whereType
    - prefer_null_aware_operators
    - prefer_spread_collections
    - prefer_typing_uninitialized_variables
    - prefer_void_to_null
    - recursive_getters
    - sized_box_for_whitespace
    - unnecessary_brace_in_string_interps
    - unnecessary_const
    - unnecessary_getters_setters
    - unnecessary_lambdas
    - unnecessary_new
    - unnecessary_null_aware_assignments
    - unnecessary_null_checks
    - unnecessary_null_in_if_null_operators
    - unnecessary_overrides
    - unnecessary_parenthesis
    - unnecessary_raw_strings
    - unnecessary_statements
    - unnecessary_string_escapes
    - unnecessary_string_interpolations
    - unrelated_type_equality_checks
    - use_is_even_rather_than_modulo
    - use_rethrow_when_possible
    - valid_regexps
    - void_checks